<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Chris Hoffman</title>
    <link>http://hoffmanc.com/posts/</link>
    <description>Recent content in Posts on Chris Hoffman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Aug 2020 02:18:54 +0000</lastBuildDate><atom:link href="http://hoffmanc.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>useEffect style</title>
      <link>http://hoffmanc.com/posts/use-effect/</link>
      <pubDate>Wed, 26 Aug 2020 02:18:54 +0000</pubDate>
      
      <guid>http://hoffmanc.com/posts/use-effect/</guid>
      <description>I was able to modify the width of a stubborn react-admin component dynamically, using another DOM element as a reference point, and it was actually pretty clean! Here&amp;rsquo;s a stripped-down version:
MyComponent = () =&amp;gt; { [width, setWidth] = useState() useEffect(() =&amp;gt; { const main = document.querySelector(&amp;#39;main&amp;#39;); if (!main) { return; } setWidth(main.getBoundingClientRect().width - 50); }); render &amp;lt;StubbornComponent style={{width}}/&amp;gt; } I would&amp;rsquo;ve preferred a pure-CSS solution, but this seems to be working and the code is temporary (well, moreso than usual, hopefully)</description>
    </item>
    
    <item>
      <title>Gohang</title>
      <link>http://hoffmanc.com/posts/gohang/</link>
      <pubDate>Tue, 25 Aug 2020 12:55:00 +0000</pubDate>
      
      <guid>http://hoffmanc.com/posts/gohang/</guid>
      <description>To make a go program hang until terminated, you can use this line:
&amp;lt;-make(chan struct{}) Why would you want to do this? In our case we have a blue/green setup that and docker compose set to restart: always, so if the server reboots both the blue and green containers get spun up at the same time. Now we check to see which one is supposed to be active, and if a container doesn&amp;rsquo;t match, it executes this hang - otherwise docker will see the 0 exit code and constantly try restarting the container.</description>
    </item>
    
    <item>
      <title>House</title>
      <link>http://hoffmanc.com/posts/house/</link>
      <pubDate>Mon, 24 Aug 2020 02:10:38 +0000</pubDate>
      
      <guid>http://hoffmanc.com/posts/house/</guid>
      <description>This weekend I learned a bit about what goes into putting a house together. The biggest take away was that making sure all the pieces are square and level is critical, and saves a lot of time down the road.
For instance: there were two mud sills, or sill plates, on the foundation walls. The original plan was to shim the second course of sill so that it was totally level all the way around the foundation.</description>
    </item>
    
    <item>
      <title>Unmarshal</title>
      <link>http://hoffmanc.com/posts/unmarshal/</link>
      <pubDate>Sat, 22 Aug 2020 00:07:18 +0000</pubDate>
      
      <guid>http://hoffmanc.com/posts/unmarshal/</guid>
      <description>Do not rely on the fact that go unmarshaled json without error into your type - it may just have ignored all the json and instantiated an empty variable.</description>
    </item>
    
    <item>
      <title>git add `--edit`</title>
      <link>http://hoffmanc.com/posts/til/</link>
      <pubDate>Fri, 21 Aug 2020 02:34:20 +0000</pubDate>
      
      <guid>http://hoffmanc.com/posts/til/</guid>
      <description>TIL that I can use git add --edit during an interactive rebase to do things like move a file from a go package (created in that commit) to an existing package; this reduces the scope of the regex substitution to avoid changing unrelated code.</description>
    </item>
    
  </channel>
</rss>
